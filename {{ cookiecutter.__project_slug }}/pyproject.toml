[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "{{ cookiecutter.project_version }}"
description = "{{ cookiecutter.project_description }}"
authors = ["{{ cookiecutter.author }} <{{ cookiecutter.author_email }}>"]
classifiers = [
    "Programming Language :: Python :: {{ cookiecutter.__python_version_major }}",
    "Programming Language :: Python :: {{ cookiecutter.__python_version_minor }}",
    "Programming Language :: Python :: {{ cookiecutter.__python_version_major }} :: Only",
]

[tool.poetry.dependencies]
python = "^{{ cookiecutter.__python_version_minor }}"


[tool.poetry.group.dev.dependencies]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.flakeheaven]
max_line_length = 120
format = "grouped"
show_source = true

[tool.flakeheaven.plugins]
# E203 required to maintain compatibility with black
# W503 is a linebreak before binary operators. flake8 also has W504, linebreak *after*
# binary operators. PEP-8 recommends linebreaks before binary operators to keep all
# operators aligned. this config respects W504 and ignores W503
pycodestyle = [
    "+*",
    "-E203",
    "-W503",
]
pyflakes = [
    "+*",
]

[tool.mypy]
disallow_any_unimported = true
disallow_any_expr = false
disallow_any_decorated = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_unused_ignores = true
warn_return_any = true

exclude = [
    "tests/",
]

[tool.isort]
py_version = "{{ cookiecutter.__python_version_short }}"
profile = "black"
line_length = "120"
# TODO: known first party?


[tool.pytest.ini_options]
addopts = "--junit-xml='test_output/test_report.xml'"
